{"ast":null,"code":"var _jsxFileName = \"S:\\\\personal-projects\\\\mern-todo-app\\\\src\\\\components\\\\Todo\\\\TodoInput.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Paper, TextField, makeStyles, Button, Box } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoInput(props) {\n  _s();\n\n  var classes = useStyles();\n  var inputChangeHandler = props.inputChangeHandler,\n      addTodoHandler = props.addTodoHandler,\n      error = props.error;\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    variant: \"outlined\",\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      onSubmit: addTodoHandler,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        width: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          width: \"70%\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Todo title\",\n            name: \"title\",\n            variant: \"outlined\",\n            onChange: inputChangeHandler,\n            error: error.titleError,\n            helperText: error.titleError ? \"Can not be left empty, min words 8\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            style: {\n              width: \"70%\",\n              marginLeft: \"1rem\"\n            },\n            name: \"description\",\n            label: \"Description\",\n            variant: \"outlined\",\n            onChange: inputChangeHandler,\n            error: error.descError,\n            helperText: error.descError ? \"Can not be left empty, min words 16\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          width: \"30%\",\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"outlined\",\n            color: \"primary\",\n            children: \"Add Todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoInput, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = TodoInput;\nexport default TodoInput;\nvar useStyles = makeStyles(function (theme) {\n  return {\n    paper: {\n      padding: \"2rem 1rem\",\n      marginTop: \"1rem\"\n    }\n  };\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoInput\");","map":{"version":3,"sources":["S:/personal-projects/mern-todo-app/src/components/Todo/TodoInput.tsx"],"names":["React","Paper","TextField","makeStyles","Button","Box","TodoInput","props","classes","useStyles","inputChangeHandler","addTodoHandler","error","paper","titleError","width","marginLeft","descError","theme","padding","marginTop"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,MAAvC,EAA+CC,GAA/C,QAA0D,mBAA1D;;;AAQA,SAASC,SAAT,CAAmBC,KAAnB,EAAqC;AAAA;;AACnC,MAAMC,OAAO,GAAGC,SAAS,EAAzB;AAEA,MAAQC,kBAAR,GAAsDH,KAAtD,CAAQG,kBAAR;AAAA,MAA4BC,cAA5B,GAAsDJ,KAAtD,CAA4BI,cAA5B;AAAA,MAA4CC,KAA5C,GAAsDL,KAAtD,CAA4CK,KAA5C;AAEA,sBACE,QAAC,KAAD;AAAO,IAAA,OAAO,EAAC,UAAf;AAA0B,IAAA,SAAS,EAAEJ,OAAO,CAACK,KAA7C;AAAA,2BACE;AAAM,MAAA,UAAU,MAAhB;AAAiB,MAAA,QAAQ,EAAEF,cAA3B;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,KAAK,EAAC,MAAX;AAAkB,QAAA,OAAO,EAAC,MAA1B;AAAiC,QAAA,UAAU,EAAC,QAA5C;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,KAAK,EAAC,KAAX;AAAA,kCACE,QAAC,SAAD;AACE,YAAA,KAAK,EAAC,YADR;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,OAAO,EAAC,UAHV;AAIE,YAAA,QAAQ,EAAED,kBAJZ;AAKE,YAAA,KAAK,EAAEE,KAAK,CAACE,UALf;AAME,YAAA,UAAU,EACRF,KAAK,CAACE,UAAN,GAAmB,oCAAnB,GAA0D;AAP9D;AAAA;AAAA;AAAA;AAAA,kBADF,eAWE,QAAC,SAAD;AACE,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE,KAAT;AAAgBC,cAAAA,UAAU,EAAE;AAA5B,aADT;AAEE,YAAA,IAAI,EAAC,aAFP;AAGE,YAAA,KAAK,EAAC,aAHR;AAIE,YAAA,OAAO,EAAC,UAJV;AAKE,YAAA,QAAQ,EAAEN,kBALZ;AAME,YAAA,KAAK,EAAEE,KAAK,CAACK,SANf;AAOE,YAAA,UAAU,EACRL,KAAK,CAACK,SAAN,GAAkB,qCAAlB,GAA0D;AAR9D;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAwBE,QAAC,GAAD;AAAK,UAAA,KAAK,EAAC,KAAX;AAAiB,UAAA,OAAO,EAAC,MAAzB;AAAgC,UAAA,cAAc,EAAC,UAA/C;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAC,UAA9B;AAAyC,YAAA,KAAK,EAAC,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAxBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD;;GAzCQX,S;UACSG,S;;;KADTH,S;AA2CT,eAAeA,SAAf;AAEA,IAAMG,SAAS,GAAGN,UAAU,CAAC,UAACe,KAAD;AAAA,SAAY;AACvCL,IAAAA,KAAK,EAAE;AACLM,MAAAA,OAAO,EAAE,WADJ;AAELC,MAAAA,SAAS,EAAE;AAFN;AADgC,GAAZ;AAAA,CAAD,CAA5B","sourcesContent":["import React from \"react\";\r\n\r\nimport { Paper, TextField, makeStyles, Button, Box } from \"@material-ui/core\";\r\n\r\ntype PropTypes = {\r\n  inputChangeHandler: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  addTodoHandler: (e: React.FormEvent<HTMLFormElement>) => void;\r\n  error: { titleError: boolean; descError: boolean };\r\n};\r\n\r\nfunction TodoInput(props: PropTypes) {\r\n  const classes = useStyles();\r\n\r\n  const { inputChangeHandler, addTodoHandler, error } = props;\r\n\r\n  return (\r\n    <Paper variant=\"outlined\" className={classes.paper}>\r\n      <form noValidate onSubmit={addTodoHandler}>\r\n        <Box width=\"100%\" display=\"flex\" alignItems=\"center\">\r\n          <Box width=\"70%\">\r\n            <TextField\r\n              label=\"Todo title\"\r\n              name=\"title\"\r\n              variant=\"outlined\"\r\n              onChange={inputChangeHandler}\r\n              error={error.titleError}\r\n              helperText={\r\n                error.titleError ? \"Can not be left empty, min words 8\" : \"\"\r\n              }\r\n            />\r\n            <TextField\r\n              style={{ width: \"70%\", marginLeft: \"1rem\" }}\r\n              name=\"description\"\r\n              label=\"Description\"\r\n              variant=\"outlined\"\r\n              onChange={inputChangeHandler}\r\n              error={error.descError}\r\n              helperText={\r\n                error.descError ? \"Can not be left empty, min words 16\" : \"\"\r\n              }\r\n            />\r\n          </Box>\r\n          <Box width=\"30%\" display=\"flex\" justifyContent=\"flex-end\">\r\n            <Button type=\"submit\" variant=\"outlined\" color=\"primary\">\r\n              Add Todo\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default TodoInput;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: \"2rem 1rem\",\r\n    marginTop: \"1rem\",\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}