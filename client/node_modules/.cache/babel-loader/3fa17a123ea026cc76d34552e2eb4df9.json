{"ast":null,"code":"var _jsxFileName = \"S:\\\\personal-projects\\\\mern-todo-app\\\\client\\\\src\\\\components\\\\Todo\\\\TodoInput.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Paper, TextField, makeStyles, Button, Box, CircularProgress } from \"@material-ui/core\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoInput(props) {\n  _s();\n\n  var classes = useStyles();\n  var isSmallScreen = useMediaQuery(\"(max-width:1160px)\");\n  var inputChangeHandler = props.inputChangeHandler,\n      addTodoHandler = props.addTodoHandler,\n      error = props.error,\n      isTodoAdding = props.isTodoAdding,\n      todo = props.todo;\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    variant: \"outlined\",\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      onSubmit: addTodoHandler,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: isSmallScreen ? \"column\" : \"row\",\n        alignItems: isSmallScreen ? \"flex-start\" : \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          width: \"70%\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Todo title\",\n            name: \"title\",\n            variant: \"outlined\",\n            onChange: inputChangeHandler,\n            error: error.titleError,\n            helperText: error.titleError ? \"Can not be left empty, min words 8\" : \"\",\n            value: todo.title,\n            style: {\n              width: isSmallScreen ? \"100%\" : \"\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            style: {\n              width: isSmallScreen ? \"100%\" : \"70%\",\n              margin: isSmallScreen ? \"16px 0\" : \"0 0 0 1rem\"\n            },\n            name: \"description\",\n            label: \"Description\",\n            variant: \"outlined\",\n            onChange: inputChangeHandler,\n            error: error.descError,\n            helperText: error.descError ? \"Can not be left empty, min words 16\" : \"\",\n            value: todo.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          width: \"30%\",\n          display: \"flex\",\n          justifyContent: isSmallScreen ? \"flex-start\" : \"center\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"outlined\",\n            color: \"primary\",\n            style: {\n              width: \"6.5625rem\"\n            },\n            disabled: isTodoAdding,\n            children: isTodoAdding ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 31\n            }, this) : \"Add Todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoInput, \"vVzrnzk7kAqMSzNAiJqEVFOU0Do=\", false, function () {\n  return [useStyles, useMediaQuery];\n});\n\n_c = TodoInput;\nexport default TodoInput;\nvar useStyles = makeStyles(function (theme) {\n  return {\n    paper: {\n      padding: \"2rem 1rem\",\n      marginTop: \"1rem\"\n    }\n  };\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoInput\");","map":{"version":3,"sources":["S:/personal-projects/mern-todo-app/client/src/components/Todo/TodoInput.tsx"],"names":["React","Paper","TextField","makeStyles","Button","Box","CircularProgress","useMediaQuery","TodoInput","props","classes","useStyles","isSmallScreen","inputChangeHandler","addTodoHandler","error","isTodoAdding","todo","paper","titleError","title","width","margin","descError","description","theme","padding","marginTop"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport {\r\n  Paper,\r\n  TextField,\r\n  makeStyles,\r\n  Button,\r\n  Box,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { TodoType } from \"../../types/types\";\r\nimport { useMediaQuery } from \"@material-ui/core\";\r\n\r\ntype PropTypes = {\r\n  inputChangeHandler: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  addTodoHandler: (e: React.FormEvent<HTMLFormElement>) => void;\r\n  error: { titleError: boolean; descError: boolean };\r\n  isTodoAdding: boolean;\r\n  todo: TodoType;\r\n};\r\n\r\nfunction TodoInput(props: PropTypes) {\r\n  const classes = useStyles();\r\n\r\n  const isSmallScreen = useMediaQuery(\"(max-width:1160px)\");\r\n\r\n  const { inputChangeHandler, addTodoHandler, error, isTodoAdding, todo } =\r\n    props;\r\n\r\n  return (\r\n    <Paper variant=\"outlined\" className={classes.paper}>\r\n      <form noValidate onSubmit={addTodoHandler}>\r\n        <Box\r\n          width=\"100%\"\r\n          display=\"flex\"\r\n          flexDirection={isSmallScreen ? \"column\" : \"row\"}\r\n          alignItems={isSmallScreen ? \"flex-start\" : \"center\"}\r\n        >\r\n          <Box width=\"70%\">\r\n            <TextField\r\n              label=\"Todo title\"\r\n              name=\"title\"\r\n              variant=\"outlined\"\r\n              onChange={inputChangeHandler}\r\n              error={error.titleError}\r\n              helperText={\r\n                error.titleError ? \"Can not be left empty, min words 8\" : \"\"\r\n              }\r\n              value={todo.title}\r\n              style={{ width: isSmallScreen ? \"100%\" : \"\" }}\r\n            />\r\n            <TextField\r\n              style={{\r\n                width: isSmallScreen ? \"100%\" : \"70%\",\r\n                margin: isSmallScreen ? \"16px 0\" : \"0 0 0 1rem\",\r\n              }}\r\n              name=\"description\"\r\n              label=\"Description\"\r\n              variant=\"outlined\"\r\n              onChange={inputChangeHandler}\r\n              error={error.descError}\r\n              helperText={\r\n                error.descError ? \"Can not be left empty, min words 16\" : \"\"\r\n              }\r\n              value={todo.description}\r\n            />\r\n          </Box>\r\n          <Box\r\n            width=\"30%\"\r\n            display=\"flex\"\r\n            justifyContent={isSmallScreen ? \"flex-start\" : \"center\"}\r\n          >\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              style={{ width: \"6.5625rem\" }}\r\n              disabled={isTodoAdding}\r\n            >\r\n              {isTodoAdding ? <CircularProgress size={20} /> : \"Add Todo\"}\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default TodoInput;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: \"2rem 1rem\",\r\n    marginTop: \"1rem\",\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}